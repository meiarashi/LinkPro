# クライアント・PMマッチングプラットフォーム 要件定義書

## 1. プロジェクト概要

### 1.1 目的

クライアントとプロジェクトマネージャー（PM）をマッチングするプラットフォームを開発する。クライアントはプロジェクトを作成・公開し、PMはプロフィールを作成して応募するという基本機能を提供し、効率的かつ適切なマッチングを実現する。

### 1.2 プロジェクトの背景

プロジェクトマネージャーとクライアントのマッチングは従来、人的ネットワークや既存のフリーランスプラットフォームに依存していたが、プロジェクトマネジメント特化型のマッチングサービスは少ない。本プラットフォームは、PMの特性とクライアントの求める要件を適切にマッチングし、成功率の高いプロジェクト実施を支援する。

### 1.3 開発アプローチ

段階的な開発アプローチを採用し、以下のフェーズに分けて実装を進める：

1. MVP（最小機能版）：基本認証、プロフィール作成、プロジェクト作成、基本的なマッチング機能
2. 機能強化フェーズ：指向性チェック詳細化、検索機能強化、UI/UX改善
3. 特徴的機能実装：AI審査、リファレンスチェック、有料プラン導入
4. 拡張機能：コミュニティ機能、チーム共有機能

## 2. システム要件

### 2.1 機能要件

### 2.1.1 共通基本機能

**認証系機能**

- ユーザー登録（メールアドレス、Gmailによる登録）
- ユーザータイプ選択（クライアント/PM）
- メール認証プロセス
- ログイン/ログアウト
- パスワードリセット

**アカウント管理**

- プロフィール設定/編集
- アカウント削除
- ユーザー設定変更
- プラン選択/管理（拡張フェーズ）

**指向性チェック**

- ユーザー特性を把握するための質問回答
- 結果の保存と分析
- マッチングへの活用

**コミュニケーション機能**

- メッセージ送受信
- メッセージ一覧表示
- 既読/未読管理
- プロジェクト情報添付

### 2.1.2 クライアント向け機能

**ダッシュボード**

- 作成プロジェクト一覧
- 新着メッセージ通知
- PM応募状況
- AI審査ステータス（拡張フェーズ）

**プロジェクト管理**

- プロジェクト作成/編集
    - タイトル、説明入力
    - 期間・予算設定
    - 求めるスキル設定
- プロジェクトステータス管理
- 求めるPM像チェック（質問形式）

**PM検索/閲覧**

- PM一覧表示
- 検索機能（キーワード、スキル等）
- フィルター機能
- PMプロフィール詳細表示
- スカウト機能（メッセージ送信）

**チーム共有機能**（拡張フェーズ）

- チームメンバー招待
- 権限設定
- 共有プロジェクト管理

**リファレンスチェック**（拡張フェーズ）

- PMへのリファレンスチェック依頼
- 結果確認

### 2.1.3 PM向け機能

**ダッシュボード**

- プロフィール公開状態
- 応募中プロジェクト一覧
- 新着メッセージ通知
- AI審査ステータス（拡張フェーズ）

**プロフィール管理**

- 基本情報設定
- 経歴・スキル登録
- 単価・稼働情報設定
- アピールポイント記載

**プロジェクト検索/閲覧**

- プロジェクト一覧表示
- 検索機能（キーワード、条件等）
- フィルター機能
- プロジェクト詳細表示
- 応募機能

**リファレンスチェック対応**（拡張フェーズ）

- リファレンスチェック承認/拒否
- 結果共有設定

### 2.1.4 特徴的機能（拡張フェーズ）

**AIによる審査**

- ユーザー情報と公開情報の整合性確認
- Web検索を通じた評判調査
- 定量評価の実施と表示
- リコメンド優先順位への反映

**よいマッチング促進**

- 指向性チェック結果に基づくリコメンド
- 相性スコアの算出と表示
- マッチング精度の向上

**リファレンスチェック**

- 外部システムAPIとの連携
- 承認フローの実装
- 結果の安全な共有

**ユーザーコミュニティ**

- 質問投稿/回答機能
- カテゴリ分類
- ありがとうバッジ機能
- バッジ数の公開表示

**有料プラン機能**

- プラン種別設定
- Stripe連携による決済
- プラン別機能制限管理

### 2.2 非機能要件

### 2.2.1 パフォーマンス要件

- ページ読み込み時間：3秒以内
- 同時接続ユーザー数：初期100名、将来的に1000名
- 検索結果表示：2秒以内

### 2.2.2 セキュリティ要件

- ユーザー認証の安全性確保
- パスワードの暗号化保存
- データアクセス権限の適切な設定
- 個人情報保護対策

### 2.2.3 可用性要件

- システム稼働率：99.5%以上
- バックアップ：日次
- メンテナンス時間：事前告知による計画的実施

### 2.2.4 ユーザビリティ要件

- 直感的なUI/UX
- レスポンシブデザイン対応
- アクセシビリティ配慮
- 使用ガイド/ヘルプ機能の提供

### 2.2.5 スケーラビリティ要件

- ユーザー数増加に対応可能な設計
- 機能拡張の容易性確保

## 3. システム設計

### 3.1 データベース設計

あくまでも仮案であり、目的達成のために柔軟に変更する

### 3.1.1 Users（ユーザー）テーブル

- id：一意識別子
- email：メールアドレス
- password：パスワード（暗号化）
- user_type：ユーザータイプ（クライアント/PM）
- name：氏名
- created_date：登録日
- last_login：最終ログイン日
- verification_status：認証状態
- account_status：アカウント有効状態
- plan_type：契約プラン（拡張フェーズ）
- payment_status：支払い状態（拡張フェーズ）

### 3.1.2 Profiles（プロフィール）テーブル

- id：一意識別子
- user_id：ユーザーID（外部キー）
- contact_info：連絡先情報
- profile_details：詳細情報（JSON）
    - 経歴
    - スキル
    - アピールポイント
- orientation_results：指向性チェック結果（JSON）
- rate_info：単価情報（PM用）
- availability：稼働情報（PM用）
- visibility：公開状態
- ai_review_status：AI審査状態（拡張フェーズ）
- ai_review_score：AI審査スコア（拡張フェーズ）
- reference_status：リファレンスチェック状態（拡張フェーズ）
- badge_count：ありがとうバッジ数（拡張フェーズ）

### 3.1.3 Projects（プロジェクト）テーブル

- id：一意識別子
- client_id：クライアントID（外部キー）
- title：プロジェクトタイトル
- description：プロジェクト説明
- budget：予算
- duration：期間
- required_skills：求めるスキル（JSON）
- created_date：作成日
- updated_date：更新日
- status：ステータス（公開/非公開/完了/中止）
- pm_requirements：求めるPM像チェック結果（JSON）
- team_id：チームID（拡張フェーズ）

### 3.1.4 Applications（応募）テーブル

- id：一意識別子
- project_id：プロジェクトID（外部キー）
- pm_id：PMID（外部キー）
- application_date：応募日
- message：応募メッセージ
- status：ステータス（応募中/採用/不採用）
- attachments：添付情報（JSON）

### 3.1.5 Messages（メッセージ）テーブル

- id：一意識別子
- sender_id：送信者ID（外部キー）
- receiver_id：受信者ID（外部キー）
- content：メッセージ内容
- sent_date：送信日時
- read_status：既読状態
- project_id：関連プロジェクトID（外部キー）
- application_id：関連応募ID（外部キー）
- attachments：添付ファイル情報（JSON）

### 3.1.6 Teams（チーム）テーブル（拡張フェーズ）

- id：一意識別子
- client_id：クライアントID（外部キー）
- name：チーム名
- created_date：作成日
- members：メンバーリスト（JSON）
    - ユーザーID
    - 権限レベル
    - 招待状態

### 3.1.7 Communities（コミュニティ）テーブル（拡張フェーズ）

- id：一意識別子
- user_id：質問者ID（外部キー）
- title：質問タイトル
- content：質問内容
- created_date：投稿日
- category：カテゴリ
- status：ステータス（未回答/回答済）

### 3.1.8 Answers（回答）テーブル（拡張フェーズ）

- id：一意識別子
- question_id：質問ID（外部キー）
- user_id：回答者ID（外部キー）
- content：回答内容
- created_date：回答日
- badge_count：バッジ数

### 3.1.9 Badges（バッジ）テーブル（拡張フェーズ）

- id：一意識別子
- answer_id：回答ID（外部キー）
- sender_id：送信者ID（外部キー）
- sent_date：送信日

### 3.2 画面設計

### 3.2.1 共通画面

**認証関連**

- ランディングページ
- ログイン/新規登録画面
- アカウントタイプ選択画面
- メール認証画面
- パスワードリセット画面

**アカウント管理**

- プロフィール設定画面
- プラン選択/管理画面（拡張フェーズ）
- アカウント削除画面

**指向性チェック**

- 質問表示/回答画面
- 結果表示画面

**メッセージ機能**

- メッセージ一覧画面
- メッセージ詳細/やり取り画面
- 添付機能UI

### 3.2.2 クライアント向け画面

**ダッシュボード**

- プロジェクト一覧表示
- 新着メッセージ通知
- PM応募状況表示
- AI審査ステータス表示（拡張フェーズ）

**プロジェクト管理**

- プロジェクト作成/編集フォーム
- プロジェクトステータス管理UI
- 求めるPM像チェック画面

**PM検索/閲覧**

- PM一覧画面（検索/フィルター機能付き）
- PMプロフィール詳細画面
- スカウト機能UI（メッセージ送信）

**チーム管理**（拡張フェーズ）

- チームメンバー招待/管理画面
- 権限設定UI

**リファレンスチェック**（拡張フェーズ）

- リファレンスチェック依頼画面
- 結果確認画面

### 3.2.3 PM向け画面

**ダッシュボード**

- プロフィール公開状態表示
- 応募中プロジェクト一覧
- 新着メッセージ通知
- AI審査ステータス表示（拡張フェーズ）

**プロフィール管理**

- プロフィール作成/編集フォーム
- スキル/経歴設定UI
- 単価/稼働情報設定UI

**プロジェクト検索/閲覧**

- プロジェクト一覧画面（検索/フィルター機能付き）
- プロジェクト詳細画面
- 応募機能UI

**リファレンスチェック対応**（拡張フェーズ）

- リファレンスチェック承認/拒否画面
- 結果共有設定UI

### 3.2.4 特徴的機能画面（拡張フェーズ）

**AI審査**

- 審査結果表示画面
- 詳細スコア確認UI

**コミュニティ**

- 質問一覧/検索画面
- 質問詳細/回答表示画面
- 回答投稿UI
- ありがとうバッジ送信UI

### 3.3 ワークフロー設計

### 3.3.1 認証関連ワークフロー

**ユーザー登録フロー**

1. メールアドレス・パスワード入力
2. ユーザータイプ選択（クライアント/PM）
3. 入力情報バリデーション
4. ユーザーレコード作成
5. 認証メール送信
6. メール内リンククリックで認証完了
7. プロフィール初期化
8. 指向性チェックへ誘導

**ログイン処理**

1. メールアドレス・パスワード入力
2. 認証チェック
3. セッション管理
4. 最終ログイン更新
5. ダッシュボードへリダイレクト

**指向性チェックフロー**

1. 質問表示
2. 回答保存
3. 次の質問表示（繰り返し）
4. スコアリング処理
5. プロフィール更新
6. 結果表示
7. ダッシュボードへ誘導

### 3.3.2 クライアント関連ワークフロー

**プロジェクト作成フロー**

1. プロジェクト基本情報入力
2. 求めるスキル設定
3. 予算・期間設定
4. 求めるPM像チェック質問回答
5. プロジェクトレコード作成
6. 公開設定
7. PM検索画面へ誘導

**PM検索・スカウトフロー**

1. 検索条件設定
2. 結果表示（相性スコア順）
3. PMプロフィール閲覧
4. スカウトメッセージ作成
5. プロジェクト選択・添付
6. メッセージ送信
7. 応募一覧確認

**応募確認フロー**

1. 応募通知受信
2. PMプロフィール確認
3. 応募メッセージ確認
4. メッセージ返信
5. 応募ステータス更新

### 3.3.3 PM関連ワークフロー

**プロフィール作成フロー**

1. 基本情報入力
2. 経歴・スキル登録
3. 単価・稼働情報設定
4. アピールポイント記載
5. プロフィール公開設定
6. プロジェクト検索画面へ誘導

**プロジェクト応募フロー**

1. 検索条件設定
2. 結果表示（相性スコア順）
3. プロジェクト詳細確認
4. 応募メッセージ作成
5. 応募送信
6. 応募一覧確認

**スカウト対応フロー**

1. スカウト通知受信
2. プロジェクト詳細確認
3. メッセージ返信
4. 応募への変換（オプション）

### 3.3.4 特徴的機能ワークフロー（拡張フェーズ）

**AI審査フロー**

1. ユーザー情報収集
2. Web検索実行（API連携）
3. 情報整合性確認
4. 評判分析
5. 定量評価算出
6. 結果保存
7. ユーザーへの表示

**リファレンスチェックフロー**

1. クライアントからの依頼
2. PMへの承認リクエスト
3. PM承認
4. 外部システムAPI呼び出し
5. 結果取得
6. クライアントへの結果共有

**コミュニティフロー**

1. 質問投稿
2. カテゴリ設定
3. 回答投稿
4. ありがとうバッジ送信
5. バッジカウント更新
6. プロフィールへの反映

**有料プラン/決済フロー**

1. プラン選択
2. Stripe決済画面表示
3. 決済処理
4. プラン更新
5. 機能制限解除

### 3.4 アーキテクチャー

DB：Supabase

ユーザー認証：SupabeseのAuthentication機能

デプロイ：vercel

コード管理：github

※Supabase、vercelともにgithubと連携されている

## 4. 外部システム連携

### 4.1 メール配信

**通知メール**

- 送信トリガー：新着メッセージ、応募/スカウト受信時
- 内容：通知情報、リンク
- 送信頻度：即時/定期ダイジェスト（設定可）

### 4.2 外部API連携

**AI審査システム**

- 連携方法：API Connector使用
- データ送信：ユーザー情報
- データ受信：審査結果、スコア

**リファレンスチェックシステム**

- 連携方法：API Connector使用
- データ送信：チェック依頼情報
- データ受信：チェック結果

### 4.3 決済システム

**Stripe連携**

- 連携方法：Stripeプラグイン使用
- 対象機能：有料プラン管理
- 決済種別：カード決済、その他電子決済

## 5. 開発・展開計画

### 5.1 フェーズ1: MVP（最小機能版）

**目標**：市場検証と初期ユーザーフィードバック収集のための最小機能セットのリリース

**開発範囲**

1. 基本認証と初期プロフィール
    - ユーザー登録/ログイン機能
    - 基本プロフィール設定
    - シンプルな指向性チェック
2. 基本マッチング機能
    - プロジェクト作成/表示
    - PM情報登録/表示
    - 基本検索機能
3. シンプルなコミュニケーション
    - 基本メッセージ機能
    - 応募/スカウト基本フロー

**期間目安**：4週間

### 5.2 フェーズ2: 基本機能強化

**目標**：ユーザーフィードバックを基にした機能改善とUX向上

**開発範囲**

1. 指向性チェック詳細化
    - 質問/選択肢の拡充
    - マッチングロジック改良
2. 検索/フィルター強化
    - 高度な検索条件
    - ソート機能の追加
3. UI/UX改善
    - レスポンシブデザイン最適化
    - ユーザーフィードバック反映

**期間目安**：4週間

### 5.3 フェーズ3: 特徴的機能実装

**目標**：他サービスとの差別化となる特徴的な機能の実装

**開発範囲**

1. AI審査機能
    - 外部APIとの連携
    - 審査結果表示
2. リファレンスチェック
    - 外部システム連携
    - 承認フロー実装
3. 有料プラン導入
    - Stripe連携
    - プラン管理機能

**期間目安**：6週間

### 5.4 フェーズ4: コミュニティ/チーム機能

**目標**：プラットフォームの発展と長期利用を促進する機能の実装

**開発範囲**

1. コミュニティ機能
    - 質問/回答システム
    - ありがとうバッジ実装
2. チーム共有機能
    - チーム招待/管理
    - 権限設定

**期間目安**：4週間

## 6. テスト計画

### 6.1 機能テスト

**認証・アカウント機能**

- ユーザー登録テスト
- ログイン/ログアウトテスト
- パスワードリセットテスト
- プロフィール編集テスト

**プロジェクト関連機能**

- プロジェクト作成テスト
- プロジェクト検索テスト
- プロジェクト応募テスト
- ステータス変更テスト

**コミュニケーション機能**

- メッセージ送信テスト
- 通知機能テスト
- 添付機能テスト

**特徴的機能**（各フェーズで追加）

- AI審査テスト
- リファレンスチェックテスト
- コミュニティ機能テスト
- 決済処理テスト

### 6.2 ユーザビリティテスト

**テスト対象**

- 基本ユーザーフロー
- 画面遷移の自然さ
- 操作性確認
- エラー表示の分かりやすさ

**テスト方法**

- 初期ユーザーによる実際の操作
- フィードバックの収集と分析

### 6.3 パフォーマンステスト

**テスト対象**

- ページ読み込み時間
- 検索処理速度
- 同時アクセス対応

**テスト方法**

- Bubbleパフォーマンスモニタリング
- 負荷テストツール活用

## 7. 運用・保守計画

### 7.1 モニタリング体制

**対象指標**

- アクセス状況
- エラー発生状況
- パフォーマンス指標
- ユーザー行動分析

**実施方法**

- Bubbleアナリティクス活用
- 外部アナリティクスツール連携

### 7.2 フィードバック収集・改善

**収集手段**

- ユーザーアンケート
- サービス内フィードバックフォーム
- 利用データ分析

**改善プロセス**

- フィードバック集約
- 優先順位付け
- 改善計画策定
- 実装・検証

### 7.3 バックアップ計画

**バックアップ対象**

- データベース全体
- Bubble設定情報

**バックアップ頻度**

- 自動バックアップ：日次
- 手動バックアップ：重要変更前

## 8. 今後の拡張性

### 8.1 機能拡張予定

**高度なマッチングアルゴリズム**

- 機械学習活用
- 成功事例データの活用

**多言語対応**

- 英語版の追加
- その他言語拡充

**モバイルアプリ化**

- ネイティブアプリ開発検討
- PWA対応強化

### 8.2 ビジネス拡張

**エンタープライズプラン**

- 法人向け機能強化
- 一括契約オプション

**エコシステム拡大**

- 関連サービスとの連携
- API公開検討

## 9. リスク管理

### 9.1 想定リスクと対策

**技術的リスク**

- パフォーマンス低下
→ 定期的な最適化とモニタリング

**ビジネスリスク**

- 初期ユーザー獲得の難しさ
→ 効果的なマーケティング戦略と紹介制度
- 競合サービスの参入
→ 特徴的機能の早期実装と差別化

**セキュリティリスク**

- 個人情報漏洩
→ 適切なアクセス制限と暗号化
- 不正利用
→ AI審査とモニタリング強化

### 9.2 対応計画

**定期的なリスク評価**

- 月次リスクレビュー
- 対策の見直し

**インシデント対応手順**

- 検知プロセス
- エスカレーションフロー
- 復旧手順

## 10. 成功指標

### 10.1 KPI設定

**ユーザー関連**

- 新規ユーザー登録数（クライアント/PM）
- アクティブユーザー率
- ユーザー継続率

**マッチング関連**

- プロジェクト登録数
- マッチング成立数
- マッチング成功率

**ビジネス関連**

- 有料プラン転換率（拡張フェーズ）
- 月間売上（拡張フェーズ）
- 顧客獲得コスト

### 10.2 測定方法

**データ収集**

- Bubbleアナリティクス
- ユーザーアンケート
- 定期的なフォローアップ

**分析・レポート**

- 週次簡易レポート
- 月次詳細レポート
- 四半期戦略レビュー

## 11. ステークホルダー

### 11.1 関係者一覧

**開発チーム**

- プロジェクトマネージャー
- UI/UXデザイナー
- テスター